## Sequence Diagram
@startuml
actor Customer
participant "Login Page" as Login
participant "Dashboard" as Dashboard
participant "ProdukService" as Produk
participant "PesananService" as Pesanan
participant "Database" as DB

Customer -> Login : input username & password
Login -> DB : verify credentials
DB --> Login : valid/invalid
Login --> Customer : login success

Customer -> Dashboard : pilih produk
Dashboard -> Produk : getProdukList()
Produk --> Dashboard : daftar produk

Customer -> Dashboard : klik 'Pesan'
Dashboard -> Pesanan : buatPesanan(data)
Pesanan -> Produk : cek & updateStok()
Produk -> DB : kurangi stok
DB --> Produk : stok updated
Produk --> Pesanan : stok ok

Pesanan -> DB : simpan data pesanan
DB --> Pesanan : success
Pesanan --> Dashboard : pesanan berhasil

Dashboard --> Customer : tampilkan konfirmasi
@enduml

## Use Case Diagram
@startuml
left to right direction

actor Customer
actor Admin

rectangle "Toko Bunga Digital" {
    
    (Login) as LoginCU
    (Sign Up) as SignUp
    (Lihat Produk) as ViewProduct
    (Pesan Produk) as OrderProduct
    (Lihat Status Pesanan) as ViewOrderStatus
    (Ubah Password) as ChangePassCU

    (Login Admin) as LoginAdmin
    (Kelola Produk) as ManageProducts
    (Kelola Pesanan) as ManageOrders
    (Kelola Pelanggan) as ManageCustomers
    (Lihat Laporan Penjualan) as ViewReports
    (Ubah Password Admin) as ChangePassAdmin

    Customer --> LoginCU
    Customer --> SignUp
    Customer --> ViewProduct
    Customer --> OrderProduct
    Customer --> ViewOrderStatus
    Customer --> ChangePassCU

    Admin --> LoginAdmin
    Admin --> ManageProducts
    Admin --> ManageOrders
    Admin --> ManageCustomers
    Admin --> ViewReports
    Admin --> ChangePassAdmin
}

@enduml

## Class Diagram
@startuml
' Define skin
skinparam classAttributeIconSize 0

class Akun {
  - id: int
  - username: str
  - password: str
  - role: str
  + login()
  + logout()
  + ubahPassword()
}

class Admin {
  - nama: str
  - email: str
  + kelolaProduk()
  + lihatLaporan()
}

class Customer {
  - nama: str
  - email: str
  - alamat: str
  - no_hp: str
  - saldo: float
  + pesanProduk()
  + cekStatusPesanan()
}

class Produk {
  - id: int
  - nama: str
  - harga: float
  - stok: int
  - kategori: str
  - deskripsi: str
  + updateStok()
  + ubahProduk()
  + hapusProduk()
}

class Pesanan {
  - id: int
  - customer_id: int
  - produk_id: int
  - jumlah: int
  - total_harga: float
  - status: str
  - tanggal: datetime
  + ubahStatus()
  + hitungTotal()
}

class Laporan {
  - id: int
  - tanggal_awal: date
  - tanggal_akhir: date
  - total_penjualan: float
  - total_pesanan: int
  + generateLaporan()
}

Akun <|-- Admin
Akun <|-- Customer
Customer "1" -- "0..*" Pesanan : melakukan
Pesanan "1" -- "1" Produk : berisi
Admin "1" -- "0..*" Laporan : membuat
Admin "1" -- "0..*" Produk : mengelola

@enduml
